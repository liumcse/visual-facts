FACT TUPLE :
reference "org.apache.commons.csv.CSVParser.2" "org.apache.commons.csv.Token.Type"
reference "org.apache.commons.csv.CSVParser.2" "org.apache.commons.csv.CSVParser"
reference "org.apache.commons.csv.CSVParser.2" "org.apache.commons.csv.Token"
call "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.Token.Type.values()"
reference "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.CSVParser.2.$SwitchMap$org$apache$commons$csv$Token$Type : int[]"
reference "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.Token.Type.TOKEN : Type"
call "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.Token.Type.ordinal()"
reference "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.Token.Type.EORECORD : Type"
reference "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.Token.Type.EOF : Type"
reference "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.Token.Type.INVALID : Type"
reference "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.Token.Type.COMMENT : Type"
contain "org.apache.commons.csv.CSVParser.2" "org.apache.commons.csv.CSVParser.2.static {...}"
reference "org.apache.commons.csv.CSVParser.2.$SwitchMap$org$apache$commons$csv$Token$Type : int[]" "int[]"
contain "org.apache.commons.csv.CSVParser.2" "org.apache.commons.csv.CSVParser.2.$SwitchMap$org$apache$commons$csv$Token$Type : int[]"
reference "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser"
reference "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVRecord"
reference "org.apache.commons.csv.CSVParser.1.{...}" "org.apache.commons.csv.CSVParser.1.this$0 : CSVParser"
contain "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser.1.{...}"
reference "org.apache.commons.csv.CSVParser.1.getNextRecord()" "org.apache.commons.csv.CSVParser.1.this$0 : CSVParser"
call "org.apache.commons.csv.CSVParser.1.getNextRecord()" "org.apache.commons.csv.CSVParser.nextRecord()"
contain "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser.1.getNextRecord()"
reference "org.apache.commons.csv.CSVParser.1.hasNext()" "org.apache.commons.csv.CSVParser.1.this$0 : CSVParser"
call "org.apache.commons.csv.CSVParser.1.hasNext()" "org.apache.commons.csv.CSVParser.isClosed()"
reference "org.apache.commons.csv.CSVParser.1.hasNext()" "org.apache.commons.csv.CSVParser.1.current : CSVRecord"
call "org.apache.commons.csv.CSVParser.1.hasNext()" "org.apache.commons.csv.CSVParser.1.getNextRecord()"
contain "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser.1.hasNext()"
reference "org.apache.commons.csv.CSVParser.1.next()" "org.apache.commons.csv.CSVParser.1.this$0 : CSVParser"
call "org.apache.commons.csv.CSVParser.1.next()" "org.apache.commons.csv.CSVParser.isClosed()"
reference "org.apache.commons.csv.CSVParser.1.next()" "org.apache.commons.csv.CSVParser.1.current : CSVRecord"
call "org.apache.commons.csv.CSVParser.1.next()" "org.apache.commons.csv.CSVParser.1.getNextRecord()"
contain "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser.1.next()"
contain "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser.1.remove()"
reference "org.apache.commons.csv.CSVParser.1.current : CSVRecord" "org.apache.commons.csv.CSVRecord"
contain "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser.1.current : CSVRecord"
reference "org.apache.commons.csv.CSVParser.1.this$0 : CSVParser" "org.apache.commons.csv.CSVParser"
contain "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser.1.this$0 : CSVParser"
reference "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined[]"
reference "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.CSVFormat.Predefined.values()" "org.apache.commons.csv.CSVFormat.Predefined.$VALUES : Predefined[]"
call "org.apache.commons.csv.CSVFormat.Predefined.values()" "org.apache.commons.csv.CSVFormat.Predefined[].clone()"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.values()"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.valueOf(String)"
reference "org.apache.commons.csv.CSVFormat.Predefined.Predefined(String,int)" "org.apache.commons.csv.CSVFormat.Predefined.format : CSVFormat"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.Predefined(String,int)"
reference "org.apache.commons.csv.CSVFormat.Predefined.getFormat()" "org.apache.commons.csv.CSVFormat.Predefined.format : CSVFormat"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.getFormat()"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.DEFAULT : CSVFormat"
call "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.Predefined(String,int)"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.Default : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.EXCEL : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.Excel : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.InformixUnload : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD_CSV : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.InformixUnloadCsv : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.MYSQL : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.MySQL : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.POSTGRESQL_CSV : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.PostgreSQLCsv : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.POSTGRESQL_TEXT : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.PostgreSQLText : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.RFC4180 : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.RFC4180 : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.TDF : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.TDF : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.$VALUES : Predefined[]"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.static {...}"
reference "org.apache.commons.csv.CSVFormat.Predefined.Default : Predefined" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.Default : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.Excel : Predefined" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.Excel : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.InformixUnload : Predefined" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.InformixUnload : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.InformixUnloadCsv : Predefined" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.InformixUnloadCsv : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.MySQL : Predefined" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.MySQL : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.PostgreSQLCsv : Predefined" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.PostgreSQLCsv : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.PostgreSQLText : Predefined" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.PostgreSQLText : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.RFC4180 : Predefined" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.RFC4180 : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.TDF : Predefined" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.TDF : Predefined"
reference "org.apache.commons.csv.CSVFormat.Predefined.format : CSVFormat" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.format : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.Predefined.$VALUES : Predefined[]" "org.apache.commons.csv.CSVFormat.Predefined[]"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.$VALUES : Predefined[]"
reference "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.Type"
reference "org.apache.commons.csv.Token.Token()" "org.apache.commons.csv.Token.Type.INVALID : Type"
reference "org.apache.commons.csv.Token.Token()" "org.apache.commons.csv.Token.type : Type"
reference "org.apache.commons.csv.Token.Token()" "org.apache.commons.csv.Token.content : StringBuilder"
contain "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.Token()"
reference "org.apache.commons.csv.Token.reset()" "org.apache.commons.csv.Token.content : StringBuilder"
reference "org.apache.commons.csv.Token.reset()" "org.apache.commons.csv.Token.Type.INVALID : Type"
reference "org.apache.commons.csv.Token.reset()" "org.apache.commons.csv.Token.type : Type"
reference "org.apache.commons.csv.Token.reset()" "org.apache.commons.csv.Token.isReady : boolean"
contain "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.reset()"
reference "org.apache.commons.csv.Token.toString()" "org.apache.commons.csv.Token.type : Type"
call "org.apache.commons.csv.Token.toString()" "org.apache.commons.csv.Token.Type.name()"
reference "org.apache.commons.csv.Token.toString()" "org.apache.commons.csv.Token.content : StringBuilder"
contain "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.toString()"
contain "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.INITIAL_TOKEN_LENGTH : int"
reference "org.apache.commons.csv.Token.type : Type" "org.apache.commons.csv.Token.Type"
contain "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.type : Type"
contain "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.content : StringBuilder"
contain "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.isReady : boolean"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.Constants()"
reference "org.apache.commons.csv.Constants.static {...}" "org.apache.commons.csv.Constants.DOUBLE_QUOTE_CHAR : Character"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.static {...}"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.BACKSLASH : char"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.BACKSPACE : char"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.COMMA : char"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.COMMENT : char"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.CR : char"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.CRLF : String"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.DOUBLE_QUOTE_CHAR : Character"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.EMPTY : String"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.END_OF_STREAM : int"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.FF : char"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.LF : char"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.LINE_SEPARATOR : String"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.NEXT_LINE : String"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.PARAGRAPH_SEPARATOR : String"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.PIPE : char"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.RS : char"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.SP : char"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.TAB : char"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.UNDEFINED : int"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.US : char"
reference "org.apache.commons.csv.CSVRecord.CSVRecord(String[],Map,String,long,long)" "org.apache.commons.csv.CSVRecord.recordNumber : long"
reference "org.apache.commons.csv.CSVRecord.CSVRecord(String[],Map,String,long,long)" "org.apache.commons.csv.CSVRecord.EMPTY_STRING_ARRAY : String[]"
reference "org.apache.commons.csv.CSVRecord.CSVRecord(String[],Map,String,long,long)" "org.apache.commons.csv.CSVRecord.values : String[]"
reference "org.apache.commons.csv.CSVRecord.CSVRecord(String[],Map,String,long,long)" "org.apache.commons.csv.CSVRecord.mapping : Map"
reference "org.apache.commons.csv.CSVRecord.CSVRecord(String[],Map,String,long,long)" "org.apache.commons.csv.CSVRecord.comment : String"
reference "org.apache.commons.csv.CSVRecord.CSVRecord(String[],Map,String,long,long)" "org.apache.commons.csv.CSVRecord.characterPosition : long"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.CSVRecord(String[],Map,String,long,long)"
call "org.apache.commons.csv.CSVRecord.get(Enum)" "org.apache.commons.csv.CSVRecord.get(String)"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.get(Enum)"
reference "org.apache.commons.csv.CSVRecord.get(int)" "org.apache.commons.csv.CSVRecord.values : String[]"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.get(int)"
reference "org.apache.commons.csv.CSVRecord.get(String)" "org.apache.commons.csv.CSVRecord.mapping : Map"
reference "org.apache.commons.csv.CSVRecord.get(String)" "org.apache.commons.csv.CSVRecord.values : String[]"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.get(String)"
reference "org.apache.commons.csv.CSVRecord.getCharacterPosition()" "org.apache.commons.csv.CSVRecord.characterPosition : long"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.getCharacterPosition()"
reference "org.apache.commons.csv.CSVRecord.getComment()" "org.apache.commons.csv.CSVRecord.comment : String"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.getComment()"
reference "org.apache.commons.csv.CSVRecord.getRecordNumber()" "org.apache.commons.csv.CSVRecord.recordNumber : long"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.getRecordNumber()"
reference "org.apache.commons.csv.CSVRecord.isConsistent()" "org.apache.commons.csv.CSVRecord.mapping : Map"
reference "org.apache.commons.csv.CSVRecord.isConsistent()" "org.apache.commons.csv.CSVRecord.values : String[]"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.isConsistent()"
reference "org.apache.commons.csv.CSVRecord.hasComment()" "org.apache.commons.csv.CSVRecord.comment : String"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.hasComment()"
reference "org.apache.commons.csv.CSVRecord.isMapped(String)" "org.apache.commons.csv.CSVRecord.mapping : Map"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.isMapped(String)"
call "org.apache.commons.csv.CSVRecord.isSet(String)" "org.apache.commons.csv.CSVRecord.isMapped(String)"
reference "org.apache.commons.csv.CSVRecord.isSet(String)" "org.apache.commons.csv.CSVRecord.mapping : Map"
reference "org.apache.commons.csv.CSVRecord.isSet(String)" "org.apache.commons.csv.CSVRecord.values : String[]"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.isSet(String)"
call "org.apache.commons.csv.CSVRecord.iterator()" "org.apache.commons.csv.CSVRecord.toList()"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.iterator()"
reference "org.apache.commons.csv.CSVRecord.putIn(Map)" "org.apache.commons.csv.CSVRecord.mapping : Map"
reference "org.apache.commons.csv.CSVRecord.putIn(Map)" "org.apache.commons.csv.CSVRecord.values : String[]"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.putIn(Map)"
reference "org.apache.commons.csv.CSVRecord.size()" "org.apache.commons.csv.CSVRecord.values : String[]"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.size()"
reference "org.apache.commons.csv.CSVRecord.toList()" "org.apache.commons.csv.CSVRecord.values : String[]"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.toList()"
reference "org.apache.commons.csv.CSVRecord.toMap()" "org.apache.commons.csv.CSVRecord.values : String[]"
call "org.apache.commons.csv.CSVRecord.toMap()" "org.apache.commons.csv.CSVRecord.putIn(Map)"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.toMap()"
reference "org.apache.commons.csv.CSVRecord.toString()" "org.apache.commons.csv.CSVRecord.comment : String"
reference "org.apache.commons.csv.CSVRecord.toString()" "org.apache.commons.csv.CSVRecord.mapping : Map"
reference "org.apache.commons.csv.CSVRecord.toString()" "org.apache.commons.csv.CSVRecord.recordNumber : long"
reference "org.apache.commons.csv.CSVRecord.toString()" "org.apache.commons.csv.CSVRecord.values : String[]"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.toString()"
reference "org.apache.commons.csv.CSVRecord.values()" "org.apache.commons.csv.CSVRecord.values : String[]"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.values()"
reference "org.apache.commons.csv.CSVRecord.static {...}" "org.apache.commons.csv.CSVRecord.EMPTY_STRING_ARRAY : String[]"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.static {...}"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.EMPTY_STRING_ARRAY : String[]"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.serialVersionUID : long"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.characterPosition : long"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.comment : String"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.mapping : Map"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.recordNumber : long"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.values : String[]"
reference "org.apache.commons.csv.CSVFormat.1" "org.apache.commons.csv.QuoteMode"
reference "org.apache.commons.csv.CSVFormat.1" "org.apache.commons.csv.CSVFormat"
call "org.apache.commons.csv.CSVFormat.1.static {...}" "org.apache.commons.csv.QuoteMode.values()"
reference "org.apache.commons.csv.CSVFormat.1.static {...}" "org.apache.commons.csv.CSVFormat.1.$SwitchMap$org$apache$commons$csv$QuoteMode : int[]"
reference "org.apache.commons.csv.CSVFormat.1.static {...}" "org.apache.commons.csv.QuoteMode.ALL : QuoteMode"
call "org.apache.commons.csv.CSVFormat.1.static {...}" "org.apache.commons.csv.QuoteMode.ordinal()"
reference "org.apache.commons.csv.CSVFormat.1.static {...}" "org.apache.commons.csv.QuoteMode.ALL_NON_NULL : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.1.static {...}" "org.apache.commons.csv.QuoteMode.NON_NUMERIC : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.1.static {...}" "org.apache.commons.csv.QuoteMode.NONE : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.1.static {...}" "org.apache.commons.csv.QuoteMode.MINIMAL : QuoteMode"
contain "org.apache.commons.csv.CSVFormat.1" "org.apache.commons.csv.CSVFormat.1.static {...}"
reference "org.apache.commons.csv.CSVFormat.1.$SwitchMap$org$apache$commons$csv$QuoteMode : int[]" "int[]"
contain "org.apache.commons.csv.CSVFormat.1" "org.apache.commons.csv.CSVFormat.1.$SwitchMap$org$apache$commons$csv$QuoteMode : int[]"
contain "org.apache.commons.csv.Assertions" "org.apache.commons.csv.Assertions.Assertions()"
contain "org.apache.commons.csv.Assertions" "org.apache.commons.csv.Assertions.notNull(Object,String)"
reference "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode[]"
reference "org.apache.commons.csv.QuoteMode.values()" "org.apache.commons.csv.QuoteMode.$VALUES : QuoteMode[]"
call "org.apache.commons.csv.QuoteMode.values()" "org.apache.commons.csv.QuoteMode[].clone()"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.values()"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.valueOf(String)"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.QuoteMode(String,int)"
call "org.apache.commons.csv.QuoteMode.static {...}" "org.apache.commons.csv.QuoteMode.QuoteMode(String,int)"
reference "org.apache.commons.csv.QuoteMode.static {...}" "org.apache.commons.csv.QuoteMode.ALL : QuoteMode"
reference "org.apache.commons.csv.QuoteMode.static {...}" "org.apache.commons.csv.QuoteMode.ALL_NON_NULL : QuoteMode"
reference "org.apache.commons.csv.QuoteMode.static {...}" "org.apache.commons.csv.QuoteMode.MINIMAL : QuoteMode"
reference "org.apache.commons.csv.QuoteMode.static {...}" "org.apache.commons.csv.QuoteMode.NON_NUMERIC : QuoteMode"
reference "org.apache.commons.csv.QuoteMode.static {...}" "org.apache.commons.csv.QuoteMode.NONE : QuoteMode"
reference "org.apache.commons.csv.QuoteMode.static {...}" "org.apache.commons.csv.QuoteMode.$VALUES : QuoteMode[]"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.static {...}"
reference "org.apache.commons.csv.QuoteMode.ALL : QuoteMode" "org.apache.commons.csv.QuoteMode"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.ALL : QuoteMode"
reference "org.apache.commons.csv.QuoteMode.ALL_NON_NULL : QuoteMode" "org.apache.commons.csv.QuoteMode"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.ALL_NON_NULL : QuoteMode"
reference "org.apache.commons.csv.QuoteMode.MINIMAL : QuoteMode" "org.apache.commons.csv.QuoteMode"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.MINIMAL : QuoteMode"
reference "org.apache.commons.csv.QuoteMode.NON_NUMERIC : QuoteMode" "org.apache.commons.csv.QuoteMode"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.NON_NUMERIC : QuoteMode"
reference "org.apache.commons.csv.QuoteMode.NONE : QuoteMode" "org.apache.commons.csv.QuoteMode"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.NONE : QuoteMode"
reference "org.apache.commons.csv.QuoteMode.$VALUES : QuoteMode[]" "org.apache.commons.csv.QuoteMode[]"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.$VALUES : QuoteMode[]"
reference "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type[]"
reference "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token"
reference "org.apache.commons.csv.Token.Type.values()" "org.apache.commons.csv.Token.Type.$VALUES : Type[]"
call "org.apache.commons.csv.Token.Type.values()" "org.apache.commons.csv.Token.Type[].clone()"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.values()"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.valueOf(String)"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.Type(String,int)"
call "org.apache.commons.csv.Token.Type.static {...}" "org.apache.commons.csv.Token.Type.Type(String,int)"
reference "org.apache.commons.csv.Token.Type.static {...}" "org.apache.commons.csv.Token.Type.INVALID : Type"
reference "org.apache.commons.csv.Token.Type.static {...}" "org.apache.commons.csv.Token.Type.TOKEN : Type"
reference "org.apache.commons.csv.Token.Type.static {...}" "org.apache.commons.csv.Token.Type.EOF : Type"
reference "org.apache.commons.csv.Token.Type.static {...}" "org.apache.commons.csv.Token.Type.EORECORD : Type"
reference "org.apache.commons.csv.Token.Type.static {...}" "org.apache.commons.csv.Token.Type.COMMENT : Type"
reference "org.apache.commons.csv.Token.Type.static {...}" "org.apache.commons.csv.Token.Type.$VALUES : Type[]"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.static {...}"
reference "org.apache.commons.csv.Token.Type.INVALID : Type" "org.apache.commons.csv.Token.Type"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.INVALID : Type"
reference "org.apache.commons.csv.Token.Type.TOKEN : Type" "org.apache.commons.csv.Token.Type"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.TOKEN : Type"
reference "org.apache.commons.csv.Token.Type.EOF : Type" "org.apache.commons.csv.Token.Type"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.EOF : Type"
reference "org.apache.commons.csv.Token.Type.EORECORD : Type" "org.apache.commons.csv.Token.Type"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.EORECORD : Type"
reference "org.apache.commons.csv.Token.Type.COMMENT : Type" "org.apache.commons.csv.Token.Type"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.COMMENT : Type"
reference "org.apache.commons.csv.Token.Type.$VALUES : Type[]" "org.apache.commons.csv.Token.Type[]"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.$VALUES : Type[]"
reference "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.Constants"
reference "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.Predefined"
reference "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVPrinter"
reference "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.QuoteMode"
reference "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVParser"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.isLineBreak(char)"
call "org.apache.commons.csv.CSVFormat.isLineBreak(Character)" "org.apache.commons.csv.CSVFormat.isLineBreak(char)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.isLineBreak(Character)"
call "org.apache.commons.csv.CSVFormat.newFormat(char)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.newFormat(char)"
call "org.apache.commons.csv.CSVFormat.valueOf(String)" "org.apache.commons.csv.CSVFormat.Predefined.valueOf(String)"
call "org.apache.commons.csv.CSVFormat.valueOf(String)" "org.apache.commons.csv.CSVFormat.Predefined.getFormat()"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.valueOf(String)"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.nullString : String"
call "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.toStringArray(Object[])"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)" "org.apache.commons.csv.CSVFormat.validate()"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
reference "org.apache.commons.csv.CSVFormat.equals(Object)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.equals(Object)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.equals(Object)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.equals(Object)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.equals(Object)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.equals(Object)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.equals(Object)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.equals(Object)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.equals(Object)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.equals(Object)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.equals(Object)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.equals(Object)"
call "org.apache.commons.csv.CSVFormat.format(Object[])" "org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)"
call "org.apache.commons.csv.CSVFormat.format(Object[])" "org.apache.commons.csv.CSVPrinter.printRecord(Object[])"
call "org.apache.commons.csv.CSVFormat.format(Object[])" "org.apache.commons.csv.CSVPrinter.close()"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.format(Object[])"
reference "org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames()" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames()"
reference "org.apache.commons.csv.CSVFormat.getAutoFlush()" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getAutoFlush()"
reference "org.apache.commons.csv.CSVFormat.getCommentMarker()" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getCommentMarker()"
reference "org.apache.commons.csv.CSVFormat.getDelimiter()" "org.apache.commons.csv.CSVFormat.delimiter : char"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getDelimiter()"
reference "org.apache.commons.csv.CSVFormat.getEscapeCharacter()" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getEscapeCharacter()"
reference "org.apache.commons.csv.CSVFormat.getHeader()" "org.apache.commons.csv.CSVFormat.header : String[]"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getHeader()"
reference "org.apache.commons.csv.CSVFormat.getHeaderComments()" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getHeaderComments()"
reference "org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines()" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines()"
reference "org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase()" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase()"
reference "org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces()" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces()"
reference "org.apache.commons.csv.CSVFormat.getNullString()" "org.apache.commons.csv.CSVFormat.nullString : String"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getNullString()"
reference "org.apache.commons.csv.CSVFormat.getQuoteCharacter()" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getQuoteCharacter()"
reference "org.apache.commons.csv.CSVFormat.getQuoteMode()" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getQuoteMode()"
reference "org.apache.commons.csv.CSVFormat.getRecordSeparator()" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getRecordSeparator()"
reference "org.apache.commons.csv.CSVFormat.getSkipHeaderRecord()" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getSkipHeaderRecord()"
reference "org.apache.commons.csv.CSVFormat.getTrailingDelimiter()" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getTrailingDelimiter()"
reference "org.apache.commons.csv.CSVFormat.getTrim()" "org.apache.commons.csv.CSVFormat.trim : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getTrim()"
reference "org.apache.commons.csv.CSVFormat.hashCode()" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.hashCode()" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
call "org.apache.commons.csv.CSVFormat.hashCode()" "org.apache.commons.csv.QuoteMode.hashCode()"
reference "org.apache.commons.csv.CSVFormat.hashCode()" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.hashCode()" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.hashCode()" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.hashCode()" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.hashCode()" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.hashCode()" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.hashCode()" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.hashCode()" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.hashCode()" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.hashCode()" "org.apache.commons.csv.CSVFormat.header : String[]"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.hashCode()"
reference "org.apache.commons.csv.CSVFormat.isCommentMarkerSet()" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.isCommentMarkerSet()"
reference "org.apache.commons.csv.CSVFormat.isEscapeCharacterSet()" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.isEscapeCharacterSet()"
reference "org.apache.commons.csv.CSVFormat.isNullStringSet()" "org.apache.commons.csv.CSVFormat.nullString : String"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.isNullStringSet()"
reference "org.apache.commons.csv.CSVFormat.isQuoteCharacterSet()" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.isQuoteCharacterSet()"
call "org.apache.commons.csv.CSVFormat.parse(Reader)" "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.parse(Reader)"
call "org.apache.commons.csv.CSVFormat.print(Appendable)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.print(Appendable)"
call "org.apache.commons.csv.CSVFormat.print(File,Charset)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.print(File,Charset)"
reference "org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)" "org.apache.commons.csv.QuoteMode.ALL : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
call "org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.getTrim()"
call "org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.trim(CharSequence)"
call "org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.print(Object,CharSequence,int,int,Appendable,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)"
call "org.apache.commons.csv.CSVFormat.print(Object,CharSequence,int,int,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.getDelimiter()"
call "org.apache.commons.csv.CSVFormat.print(Object,CharSequence,int,int,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.isQuoteCharacterSet()"
call "org.apache.commons.csv.CSVFormat.print(Object,CharSequence,int,int,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.printAndQuote(Object,CharSequence,int,int,Appendable,boolean)"
call "org.apache.commons.csv.CSVFormat.print(Object,CharSequence,int,int,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.isEscapeCharacterSet()"
call "org.apache.commons.csv.CSVFormat.print(Object,CharSequence,int,int,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.printAndEscape(CharSequence,int,int,Appendable)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.print(Object,CharSequence,int,int,Appendable,boolean)"
call "org.apache.commons.csv.CSVFormat.print(Path,Charset)" "org.apache.commons.csv.CSVFormat.print(Appendable)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.print(Path,Charset)"
call "org.apache.commons.csv.CSVFormat.printAndEscape(CharSequence,int,int,Appendable)" "org.apache.commons.csv.CSVFormat.getDelimiter()"
call "org.apache.commons.csv.CSVFormat.printAndEscape(CharSequence,int,int,Appendable)" "org.apache.commons.csv.CSVFormat.getEscapeCharacter()"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.printAndEscape(CharSequence,int,int,Appendable)"
call "org.apache.commons.csv.CSVFormat.printAndQuote(Object,CharSequence,int,int,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.getDelimiter()"
call "org.apache.commons.csv.CSVFormat.printAndQuote(Object,CharSequence,int,int,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.getQuoteCharacter()"
call "org.apache.commons.csv.CSVFormat.printAndQuote(Object,CharSequence,int,int,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.getQuoteMode()"
reference "org.apache.commons.csv.CSVFormat.printAndQuote(Object,CharSequence,int,int,Appendable,boolean)" "org.apache.commons.csv.QuoteMode.MINIMAL : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.printAndQuote(Object,CharSequence,int,int,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.1.$SwitchMap$org$apache$commons$csv$QuoteMode : int[]"
call "org.apache.commons.csv.CSVFormat.printAndQuote(Object,CharSequence,int,int,Appendable,boolean)" "org.apache.commons.csv.QuoteMode.ordinal()"
call "org.apache.commons.csv.CSVFormat.printAndQuote(Object,CharSequence,int,int,Appendable,boolean)" "org.apache.commons.csv.CSVFormat.printAndEscape(CharSequence,int,int,Appendable)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.printAndQuote(Object,CharSequence,int,int,Appendable,boolean)"
call "org.apache.commons.csv.CSVFormat.printer()" "org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.printer()"
call "org.apache.commons.csv.CSVFormat.println(Appendable)" "org.apache.commons.csv.CSVFormat.getTrailingDelimiter()"
call "org.apache.commons.csv.CSVFormat.println(Appendable)" "org.apache.commons.csv.CSVFormat.getDelimiter()"
reference "org.apache.commons.csv.CSVFormat.println(Appendable)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.println(Appendable)"
call "org.apache.commons.csv.CSVFormat.printRecord(Appendable,Object[])" "org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)"
call "org.apache.commons.csv.CSVFormat.printRecord(Appendable,Object[])" "org.apache.commons.csv.CSVFormat.println(Appendable)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.printRecord(Appendable,Object[])"
reference "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.delimiter : char"
call "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.isEscapeCharacterSet()"
reference "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
call "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.isQuoteCharacterSet()"
reference "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
call "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.isCommentMarkerSet()"
reference "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
call "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.isNullStringSet()"
reference "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
call "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines()"
call "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces()"
call "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase()"
reference "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.toString()" "org.apache.commons.csv.CSVFormat.header : String[]"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.toString()"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.toStringArray(Object[])"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.trim(CharSequence)"
reference "org.apache.commons.csv.CSVFormat.validate()" "org.apache.commons.csv.CSVFormat.delimiter : char"
call "org.apache.commons.csv.CSVFormat.validate()" "org.apache.commons.csv.CSVFormat.isLineBreak(char)"
reference "org.apache.commons.csv.CSVFormat.validate()" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.validate()" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.validate()" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.validate()" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.validate()" "org.apache.commons.csv.QuoteMode.NONE : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.validate()" "org.apache.commons.csv.CSVFormat.header : String[]"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.validate()"
call "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames()" "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames()"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
call "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)"
call "org.apache.commons.csv.CSVFormat.withCommentMarker(char)" "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withCommentMarker(char)"
call "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.isLineBreak(Character)"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withCommentMarker(Character)"
call "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.isLineBreak(char)"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withDelimiter(char)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withDelimiter(char)"
call "org.apache.commons.csv.CSVFormat.withEscape(char)" "org.apache.commons.csv.CSVFormat.withEscape(Character)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withEscape(char)"
call "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.isLineBreak(Character)"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withEscape(Character)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withEscape(Character)"
call "org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader()" "org.apache.commons.csv.CSVFormat.withHeader(String[])"
call "org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader()" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord()"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader()"
call "org.apache.commons.csv.CSVFormat.withHeader(Class)" "org.apache.commons.csv.CSVFormat.withHeader(String[])"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withHeader(Class)"
call "org.apache.commons.csv.CSVFormat.withHeader(ResultSet)" "org.apache.commons.csv.CSVFormat.withHeader(ResultSetMetaData)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withHeader(ResultSet)"
call "org.apache.commons.csv.CSVFormat.withHeader(ResultSetMetaData)" "org.apache.commons.csv.CSVFormat.withHeader(String[])"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withHeader(ResultSetMetaData)"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withHeader(String[])" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withHeader(String[])"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withHeaderComments(Object[])"
call "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines()" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines()"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)"
call "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase()" "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase()"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)"
call "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces()" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces()"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withNullString(String)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withNullString(String)"
call "org.apache.commons.csv.CSVFormat.withQuote(char)" "org.apache.commons.csv.CSVFormat.withQuote(Character)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withQuote(char)"
call "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.isLineBreak(Character)"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withQuote(Character)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withQuote(Character)"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)"
call "org.apache.commons.csv.CSVFormat.withRecordSeparator(char)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withRecordSeparator(char)"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withRecordSeparator(String)"
call "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord()" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord()"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)"
call "org.apache.commons.csv.CSVFormat.withTrailingDelimiter()" "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withTrailingDelimiter()"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.trim : boolean"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)"
call "org.apache.commons.csv.CSVFormat.withTrim()" "org.apache.commons.csv.CSVFormat.withTrim(boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withTrim()"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.delimiter : char"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.nullString : String"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.header : String[]"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
reference "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
call "org.apache.commons.csv.CSVFormat.withTrim(boolean)" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withTrim(boolean)"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.Constants.DOUBLE_QUOTE_CHAR : Character"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.DEFAULT : CSVFormat"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames()"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.EXCEL : CSVFormat"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withDelimiter(char)"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withEscape(char)"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withQuote(Character)"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withRecordSeparator(char)"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD_CSV : CSVFormat"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withNullString(String)"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.QuoteMode.ALL_NON_NULL : QuoteMode"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.MYSQL : CSVFormat"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withEscape(Character)"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.POSTGRESQL_CSV : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.POSTGRESQL_TEXT : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.RFC4180 : CSVFormat"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces()"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.TDF : CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.static {...}"
reference "org.apache.commons.csv.CSVFormat.DEFAULT : CSVFormat" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.DEFAULT : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.EXCEL : CSVFormat" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.EXCEL : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD : CSVFormat" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD_CSV : CSVFormat" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD_CSV : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.MYSQL : CSVFormat" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.MYSQL : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.POSTGRESQL_CSV : CSVFormat" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.POSTGRESQL_CSV : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.POSTGRESQL_TEXT : CSVFormat" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.POSTGRESQL_TEXT : CSVFormat"
reference "org.apache.commons.csv.CSVFormat.RFC4180 : CSVFormat" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.RFC4180 : CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.serialVersionUID : long"
reference "org.apache.commons.csv.CSVFormat.TDF : CSVFormat" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.TDF : CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.commentMarker : Character"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.delimiter : char"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.escapeCharacter : Character"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.header : String[]"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.headerComments : String[]"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.nullString : String"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.quoteCharacter : Character"
reference "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode" "org.apache.commons.csv.QuoteMode"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.quoteMode : QuoteMode"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.recordSeparator : String"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.skipHeaderRecord : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.trailingDelimiter : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.trim : boolean"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.autoFlush : boolean"
reference "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Constants"
reference "org.apache.commons.csv.Lexer" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.Lexer" "org.apache.commons.csv.ExtendedBufferedReader"
reference "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Token.Type"
reference "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Token"
reference "org.apache.commons.csv.Lexer.getFirstEol()" "org.apache.commons.csv.Lexer.firstEol : String"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.getFirstEol()"
reference "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)" "org.apache.commons.csv.Lexer.reader : ExtendedBufferedReader"
call "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)" "org.apache.commons.csv.CSVFormat.getDelimiter()"
reference "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)" "org.apache.commons.csv.Lexer.delimiter : char"
call "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)" "org.apache.commons.csv.CSVFormat.getEscapeCharacter()"
call "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)" "org.apache.commons.csv.Lexer.mapNullToDisabled(Character)"
reference "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)" "org.apache.commons.csv.Lexer.escape : char"
call "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)" "org.apache.commons.csv.CSVFormat.getQuoteCharacter()"
reference "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)" "org.apache.commons.csv.Lexer.quoteChar : char"
call "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)" "org.apache.commons.csv.CSVFormat.getCommentMarker()"
reference "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)" "org.apache.commons.csv.Lexer.commentStart : char"
call "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)" "org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces()"
reference "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)" "org.apache.commons.csv.Lexer.ignoreSurroundingSpaces : boolean"
call "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)" "org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines()"
reference "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)" "org.apache.commons.csv.Lexer.ignoreEmptyLines : boolean"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)"
reference "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Lexer.reader : ExtendedBufferedReader"
call "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.ExtendedBufferedReader.getLastChar()"
call "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.ExtendedBufferedReader.read()"
call "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Lexer.readEndOfLine(int)"
reference "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Lexer.ignoreEmptyLines : boolean"
call "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Lexer.isStartOfLine(int)"
call "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Lexer.isEndOfFile(int)"
reference "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Token.Type.EOF : Type"
reference "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Token.type : Type"
call "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Lexer.isDelimiter(int)"
call "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Lexer.isCommentStart(int)"
call "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.ExtendedBufferedReader.readLine()"
reference "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Token.content : StringBuilder"
reference "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Token.Type.COMMENT : Type"
reference "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Token.Type.INVALID : Type"
reference "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Lexer.ignoreSurroundingSpaces : boolean"
call "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Lexer.isWhitespace(int)"
reference "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Token.Type.TOKEN : Type"
reference "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Token.Type.EORECORD : Type"
call "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Lexer.isQuoteChar(int)"
call "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)"
reference "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Token.isReady : boolean"
call "org.apache.commons.csv.Lexer.nextToken(Token)" "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.nextToken(Token)"
call "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.Lexer.readEndOfLine(int)"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.Token.Type.EORECORD : Type"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.Token.type : Type"
call "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.Lexer.isEndOfFile(int)"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.Token.Type.EOF : Type"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.Token.isReady : boolean"
call "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.Lexer.isDelimiter(int)"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.Token.Type.TOKEN : Type"
call "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.Lexer.isEscape(int)"
call "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.Lexer.readEscape()"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.Token.content : StringBuilder"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.Lexer.reader : ExtendedBufferedReader"
call "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.ExtendedBufferedReader.getLastChar()"
call "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.ExtendedBufferedReader.read()"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.Lexer.ignoreSurroundingSpaces : boolean"
call "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)" "org.apache.commons.csv.Lexer.trimTrailingSpaces(StringBuilder)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Lexer.getCurrentLineNumber()"
reference "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Lexer.reader : ExtendedBufferedReader"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.ExtendedBufferedReader.read()"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Lexer.isEscape(int)"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Lexer.readEscape()"
reference "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Token.content : StringBuilder"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.ExtendedBufferedReader.getLastChar()"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Lexer.isQuoteChar(int)"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.ExtendedBufferedReader.lookAhead()"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Lexer.isDelimiter(int)"
reference "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Token.Type.TOKEN : Type"
reference "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Token.type : Type"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Lexer.isEndOfFile(int)"
reference "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Token.Type.EOF : Type"
reference "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Token.isReady : boolean"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Lexer.readEndOfLine(int)"
reference "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Token.Type.EORECORD : Type"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)" "org.apache.commons.csv.Lexer.isWhitespace(int)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.mapNullToDisabled(Character)"
reference "org.apache.commons.csv.Lexer.getCurrentLineNumber()" "org.apache.commons.csv.Lexer.reader : ExtendedBufferedReader"
call "org.apache.commons.csv.Lexer.getCurrentLineNumber()" "org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber()"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.getCurrentLineNumber()"
reference "org.apache.commons.csv.Lexer.getCharacterPosition()" "org.apache.commons.csv.Lexer.reader : ExtendedBufferedReader"
call "org.apache.commons.csv.Lexer.getCharacterPosition()" "org.apache.commons.csv.ExtendedBufferedReader.getPosition()"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.getCharacterPosition()"
reference "org.apache.commons.csv.Lexer.readEscape()" "org.apache.commons.csv.Lexer.reader : ExtendedBufferedReader"
call "org.apache.commons.csv.Lexer.readEscape()" "org.apache.commons.csv.ExtendedBufferedReader.read()"
call "org.apache.commons.csv.Lexer.readEscape()" "org.apache.commons.csv.Lexer.isMetaChar(int)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.readEscape()"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.trimTrailingSpaces(StringBuilder)"
reference "org.apache.commons.csv.Lexer.readEndOfLine(int)" "org.apache.commons.csv.Lexer.reader : ExtendedBufferedReader"
call "org.apache.commons.csv.Lexer.readEndOfLine(int)" "org.apache.commons.csv.ExtendedBufferedReader.lookAhead()"
call "org.apache.commons.csv.Lexer.readEndOfLine(int)" "org.apache.commons.csv.ExtendedBufferedReader.read()"
reference "org.apache.commons.csv.Lexer.readEndOfLine(int)" "org.apache.commons.csv.Lexer.firstEol : String"
reference "org.apache.commons.csv.Lexer.readEndOfLine(int)" "org.apache.commons.csv.Lexer.LF_STRING : String"
reference "org.apache.commons.csv.Lexer.readEndOfLine(int)" "org.apache.commons.csv.Lexer.CR_STRING : String"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.readEndOfLine(int)"
reference "org.apache.commons.csv.Lexer.isClosed()" "org.apache.commons.csv.Lexer.reader : ExtendedBufferedReader"
call "org.apache.commons.csv.Lexer.isClosed()" "org.apache.commons.csv.ExtendedBufferedReader.isClosed()"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isClosed()"
call "org.apache.commons.csv.Lexer.isWhitespace(int)" "org.apache.commons.csv.Lexer.isDelimiter(int)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isWhitespace(int)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isStartOfLine(int)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isEndOfFile(int)"
reference "org.apache.commons.csv.Lexer.isDelimiter(int)" "org.apache.commons.csv.Lexer.delimiter : char"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isDelimiter(int)"
reference "org.apache.commons.csv.Lexer.isEscape(int)" "org.apache.commons.csv.Lexer.escape : char"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isEscape(int)"
reference "org.apache.commons.csv.Lexer.isQuoteChar(int)" "org.apache.commons.csv.Lexer.quoteChar : char"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isQuoteChar(int)"
reference "org.apache.commons.csv.Lexer.isCommentStart(int)" "org.apache.commons.csv.Lexer.commentStart : char"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isCommentStart(int)"
reference "org.apache.commons.csv.Lexer.isMetaChar(int)" "org.apache.commons.csv.Lexer.delimiter : char"
reference "org.apache.commons.csv.Lexer.isMetaChar(int)" "org.apache.commons.csv.Lexer.escape : char"
reference "org.apache.commons.csv.Lexer.isMetaChar(int)" "org.apache.commons.csv.Lexer.quoteChar : char"
reference "org.apache.commons.csv.Lexer.isMetaChar(int)" "org.apache.commons.csv.Lexer.commentStart : char"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isMetaChar(int)"
reference "org.apache.commons.csv.Lexer.close()" "org.apache.commons.csv.Lexer.reader : ExtendedBufferedReader"
call "org.apache.commons.csv.Lexer.close()" "org.apache.commons.csv.ExtendedBufferedReader.close()"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.close()"
reference "org.apache.commons.csv.Lexer.static {...}" "org.apache.commons.csv.Lexer.CR_STRING : String"
reference "org.apache.commons.csv.Lexer.static {...}" "org.apache.commons.csv.Lexer.LF_STRING : String"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.static {...}"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.CR_STRING : String"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.LF_STRING : String"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.DISABLED : char"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.delimiter : char"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.escape : char"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.quoteChar : char"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.commentStart : char"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.ignoreSurroundingSpaces : boolean"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.ignoreEmptyLines : boolean"
reference "org.apache.commons.csv.Lexer.reader : ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.reader : ExtendedBufferedReader"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.firstEol : String"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.Assertions"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.Token"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.Lexer"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.ExtendedBufferedReader"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVRecord"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.Token.Type"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.Constants"
call "org.apache.commons.csv.CSVParser.parse(File,Charset,CSVFormat)" "org.apache.commons.csv.Assertions.notNull(Object,String)"
call "org.apache.commons.csv.CSVParser.parse(File,Charset,CSVFormat)" "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.parse(File,Charset,CSVFormat)"
call "org.apache.commons.csv.CSVParser.parse(InputStream,Charset,CSVFormat)" "org.apache.commons.csv.Assertions.notNull(Object,String)"
call "org.apache.commons.csv.CSVParser.parse(InputStream,Charset,CSVFormat)" "org.apache.commons.csv.CSVParser.parse(Reader,CSVFormat)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.parse(InputStream,Charset,CSVFormat)"
call "org.apache.commons.csv.CSVParser.parse(Path,Charset,CSVFormat)" "org.apache.commons.csv.Assertions.notNull(Object,String)"
call "org.apache.commons.csv.CSVParser.parse(Path,Charset,CSVFormat)" "org.apache.commons.csv.CSVParser.parse(Reader,CSVFormat)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.parse(Path,Charset,CSVFormat)"
call "org.apache.commons.csv.CSVParser.parse(Reader,CSVFormat)" "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.parse(Reader,CSVFormat)"
call "org.apache.commons.csv.CSVParser.parse(String,CSVFormat)" "org.apache.commons.csv.Assertions.notNull(Object,String)"
call "org.apache.commons.csv.CSVParser.parse(String,CSVFormat)" "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.parse(String,CSVFormat)"
call "org.apache.commons.csv.CSVParser.parse(URL,Charset,CSVFormat)" "org.apache.commons.csv.Assertions.notNull(Object,String)"
call "org.apache.commons.csv.CSVParser.parse(URL,Charset,CSVFormat)" "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.parse(URL,Charset,CSVFormat)"
call "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat)" "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat)"
reference "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)" "org.apache.commons.csv.CSVParser.recordList : List"
call "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)" "org.apache.commons.csv.Token.Token()"
reference "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)" "org.apache.commons.csv.CSVParser.reusableToken : Token"
call "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)" "org.apache.commons.csv.Assertions.notNull(Object,String)"
reference "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)" "org.apache.commons.csv.CSVParser.format : CSVFormat"
call "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)" "org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(Reader)"
call "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)" "org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)"
reference "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)" "org.apache.commons.csv.CSVParser.lexer : Lexer"
call "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)" "org.apache.commons.csv.CSVParser.initializeHeader()"
reference "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)" "org.apache.commons.csv.CSVParser.headerMap : Map"
reference "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)" "org.apache.commons.csv.CSVParser.characterOffset : long"
reference "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)" "org.apache.commons.csv.CSVParser.recordNumber : long"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)"
reference "org.apache.commons.csv.CSVParser.addRecordValue(boolean)" "org.apache.commons.csv.CSVParser.reusableToken : Token"
reference "org.apache.commons.csv.CSVParser.addRecordValue(boolean)" "org.apache.commons.csv.Token.content : StringBuilder"
reference "org.apache.commons.csv.CSVParser.addRecordValue(boolean)" "org.apache.commons.csv.CSVParser.format : CSVFormat"
call "org.apache.commons.csv.CSVParser.addRecordValue(boolean)" "org.apache.commons.csv.CSVFormat.getTrim()"
call "org.apache.commons.csv.CSVParser.addRecordValue(boolean)" "org.apache.commons.csv.CSVFormat.getTrailingDelimiter()"
call "org.apache.commons.csv.CSVParser.addRecordValue(boolean)" "org.apache.commons.csv.CSVFormat.getNullString()"
reference "org.apache.commons.csv.CSVParser.addRecordValue(boolean)" "org.apache.commons.csv.CSVParser.recordList : List"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.addRecordValue(boolean)"
reference "org.apache.commons.csv.CSVParser.close()" "org.apache.commons.csv.CSVParser.lexer : Lexer"
call "org.apache.commons.csv.CSVParser.close()" "org.apache.commons.csv.Lexer.close()"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.close()"
reference "org.apache.commons.csv.CSVParser.getCurrentLineNumber()" "org.apache.commons.csv.CSVParser.lexer : Lexer"
call "org.apache.commons.csv.CSVParser.getCurrentLineNumber()" "org.apache.commons.csv.Lexer.getCurrentLineNumber()"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.getCurrentLineNumber()"
reference "org.apache.commons.csv.CSVParser.getFirstEndOfLine()" "org.apache.commons.csv.CSVParser.lexer : Lexer"
call "org.apache.commons.csv.CSVParser.getFirstEndOfLine()" "org.apache.commons.csv.Lexer.getFirstEol()"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.getFirstEndOfLine()"
reference "org.apache.commons.csv.CSVParser.getHeaderMap()" "org.apache.commons.csv.CSVParser.headerMap : Map"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.getHeaderMap()"
reference "org.apache.commons.csv.CSVParser.getRecordNumber()" "org.apache.commons.csv.CSVParser.recordNumber : long"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.getRecordNumber()"
call "org.apache.commons.csv.CSVParser.getRecords()" "org.apache.commons.csv.CSVParser.nextRecord()"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.getRecords()"
reference "org.apache.commons.csv.CSVParser.initializeHeader()" "org.apache.commons.csv.CSVParser.format : CSVFormat"
call "org.apache.commons.csv.CSVParser.initializeHeader()" "org.apache.commons.csv.CSVFormat.getHeader()"
call "org.apache.commons.csv.CSVParser.initializeHeader()" "org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase()"
call "org.apache.commons.csv.CSVParser.initializeHeader()" "org.apache.commons.csv.CSVParser.nextRecord()"
call "org.apache.commons.csv.CSVParser.initializeHeader()" "org.apache.commons.csv.CSVRecord.values()"
call "org.apache.commons.csv.CSVParser.initializeHeader()" "org.apache.commons.csv.CSVFormat.getSkipHeaderRecord()"
call "org.apache.commons.csv.CSVParser.initializeHeader()" "org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames()"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.initializeHeader()"
reference "org.apache.commons.csv.CSVParser.isClosed()" "org.apache.commons.csv.CSVParser.lexer : Lexer"
call "org.apache.commons.csv.CSVParser.isClosed()" "org.apache.commons.csv.Lexer.isClosed()"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.isClosed()"
call "org.apache.commons.csv.CSVParser.iterator()" "org.apache.commons.csv.CSVParser.1.{...}"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.iterator()"
reference "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.CSVParser.recordList : List"
reference "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.CSVParser.lexer : Lexer"
call "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.Lexer.getCharacterPosition()"
reference "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.CSVParser.characterOffset : long"
reference "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.CSVParser.reusableToken : Token"
call "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.Token.reset()"
call "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.Lexer.nextToken(Token)"
reference "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.CSVParser.2.$SwitchMap$org$apache$commons$csv$Token$Type : int[]"
reference "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.Token.type : Type"
call "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.Token.Type.ordinal()"
call "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.CSVParser.addRecordValue(boolean)"
reference "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.Token.isReady : boolean"
call "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.CSVParser.getCurrentLineNumber()"
reference "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.Token.content : StringBuilder"
reference "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.Token.Type.TOKEN : Type"
reference "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.CSVParser.recordNumber : long"
reference "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.CSVParser.headerMap : Map"
call "org.apache.commons.csv.CSVParser.nextRecord()" "org.apache.commons.csv.CSVRecord.CSVRecord(String[],Map,String,long,long)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.nextRecord()"
reference "org.apache.commons.csv.CSVParser.format : CSVFormat" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.format : CSVFormat"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.headerMap : Map"
reference "org.apache.commons.csv.CSVParser.lexer : Lexer" "org.apache.commons.csv.Lexer"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.lexer : Lexer"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.recordList : List"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.recordNumber : long"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.characterOffset : long"
reference "org.apache.commons.csv.CSVParser.reusableToken : Token" "org.apache.commons.csv.Token"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.reusableToken : Token"
reference "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.Constants"
reference "org.apache.commons.csv.ExtendedBufferedReader" "char[]"
reference "org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(Reader)" "org.apache.commons.csv.ExtendedBufferedReader.lastChar : int"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(Reader)"
reference "org.apache.commons.csv.ExtendedBufferedReader.read()" "org.apache.commons.csv.ExtendedBufferedReader.lastChar : int"
reference "org.apache.commons.csv.ExtendedBufferedReader.read()" "org.apache.commons.csv.ExtendedBufferedReader.eolCounter : long"
reference "org.apache.commons.csv.ExtendedBufferedReader.read()" "org.apache.commons.csv.ExtendedBufferedReader.position : long"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.read()"
reference "org.apache.commons.csv.ExtendedBufferedReader.getLastChar()" "org.apache.commons.csv.ExtendedBufferedReader.lastChar : int"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.getLastChar()"
reference "org.apache.commons.csv.ExtendedBufferedReader.read(char[],int,int)" "org.apache.commons.csv.ExtendedBufferedReader.lastChar : int"
reference "org.apache.commons.csv.ExtendedBufferedReader.read(char[],int,int)" "org.apache.commons.csv.ExtendedBufferedReader.eolCounter : long"
reference "org.apache.commons.csv.ExtendedBufferedReader.read(char[],int,int)" "org.apache.commons.csv.ExtendedBufferedReader.position : long"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.read(char[],int,int)"
reference "org.apache.commons.csv.ExtendedBufferedReader.readLine()" "org.apache.commons.csv.ExtendedBufferedReader.lastChar : int"
reference "org.apache.commons.csv.ExtendedBufferedReader.readLine()" "org.apache.commons.csv.ExtendedBufferedReader.eolCounter : long"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.readLine()"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.lookAhead()"
reference "org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber()" "org.apache.commons.csv.ExtendedBufferedReader.lastChar : int"
reference "org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber()" "org.apache.commons.csv.ExtendedBufferedReader.eolCounter : long"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber()"
reference "org.apache.commons.csv.ExtendedBufferedReader.getPosition()" "org.apache.commons.csv.ExtendedBufferedReader.position : long"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.getPosition()"
reference "org.apache.commons.csv.ExtendedBufferedReader.isClosed()" "org.apache.commons.csv.ExtendedBufferedReader.closed : boolean"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.isClosed()"
reference "org.apache.commons.csv.ExtendedBufferedReader.close()" "org.apache.commons.csv.ExtendedBufferedReader.closed : boolean"
reference "org.apache.commons.csv.ExtendedBufferedReader.close()" "org.apache.commons.csv.ExtendedBufferedReader.lastChar : int"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.close()"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.lastChar : int"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.eolCounter : long"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.position : long"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.closed : boolean"
reference "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.Constants"
reference "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.Assertions"
reference "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)" "org.apache.commons.csv.CSVPrinter.newRecord : boolean"
call "org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)" "org.apache.commons.csv.Assertions.notNull(Object,String)"
reference "org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)" "org.apache.commons.csv.CSVPrinter.out : Appendable"
reference "org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)" "org.apache.commons.csv.CSVPrinter.format : CSVFormat"
call "org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)" "org.apache.commons.csv.CSVFormat.getHeaderComments()"
call "org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)" "org.apache.commons.csv.CSVPrinter.printComment(String)"
call "org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)" "org.apache.commons.csv.CSVFormat.getHeader()"
call "org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)" "org.apache.commons.csv.CSVFormat.getSkipHeaderRecord()"
call "org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)" "org.apache.commons.csv.CSVPrinter.printRecord(Object[])"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)"
call "org.apache.commons.csv.CSVPrinter.close()" "org.apache.commons.csv.CSVPrinter.close(boolean)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.close()"
reference "org.apache.commons.csv.CSVPrinter.close(boolean)" "org.apache.commons.csv.CSVPrinter.format : CSVFormat"
call "org.apache.commons.csv.CSVPrinter.close(boolean)" "org.apache.commons.csv.CSVFormat.getAutoFlush()"
reference "org.apache.commons.csv.CSVPrinter.close(boolean)" "org.apache.commons.csv.CSVPrinter.out : Appendable"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.close(boolean)"
reference "org.apache.commons.csv.CSVPrinter.flush()" "org.apache.commons.csv.CSVPrinter.out : Appendable"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.flush()"
reference "org.apache.commons.csv.CSVPrinter.getOut()" "org.apache.commons.csv.CSVPrinter.out : Appendable"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.getOut()"
reference "org.apache.commons.csv.CSVPrinter.print(Object)" "org.apache.commons.csv.CSVPrinter.format : CSVFormat"
reference "org.apache.commons.csv.CSVPrinter.print(Object)" "org.apache.commons.csv.CSVPrinter.out : Appendable"
reference "org.apache.commons.csv.CSVPrinter.print(Object)" "org.apache.commons.csv.CSVPrinter.newRecord : boolean"
call "org.apache.commons.csv.CSVPrinter.print(Object)" "org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.print(Object)"
reference "org.apache.commons.csv.CSVPrinter.printComment(String)" "org.apache.commons.csv.CSVPrinter.format : CSVFormat"
call "org.apache.commons.csv.CSVPrinter.printComment(String)" "org.apache.commons.csv.CSVFormat.isCommentMarkerSet()"
reference "org.apache.commons.csv.CSVPrinter.printComment(String)" "org.apache.commons.csv.CSVPrinter.newRecord : boolean"
call "org.apache.commons.csv.CSVPrinter.printComment(String)" "org.apache.commons.csv.CSVPrinter.println()"
reference "org.apache.commons.csv.CSVPrinter.printComment(String)" "org.apache.commons.csv.CSVPrinter.out : Appendable"
call "org.apache.commons.csv.CSVPrinter.printComment(String)" "org.apache.commons.csv.CSVFormat.getCommentMarker()"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.printComment(String)"
reference "org.apache.commons.csv.CSVPrinter.println()" "org.apache.commons.csv.CSVPrinter.format : CSVFormat"
reference "org.apache.commons.csv.CSVPrinter.println()" "org.apache.commons.csv.CSVPrinter.out : Appendable"
call "org.apache.commons.csv.CSVPrinter.println()" "org.apache.commons.csv.CSVFormat.println(Appendable)"
reference "org.apache.commons.csv.CSVPrinter.println()" "org.apache.commons.csv.CSVPrinter.newRecord : boolean"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.println()"
call "org.apache.commons.csv.CSVPrinter.printRecord(Iterable)" "org.apache.commons.csv.CSVPrinter.print(Object)"
call "org.apache.commons.csv.CSVPrinter.printRecord(Iterable)" "org.apache.commons.csv.CSVPrinter.println()"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.printRecord(Iterable)"
reference "org.apache.commons.csv.CSVPrinter.printRecord(Object[])" "org.apache.commons.csv.CSVPrinter.format : CSVFormat"
reference "org.apache.commons.csv.CSVPrinter.printRecord(Object[])" "org.apache.commons.csv.CSVPrinter.out : Appendable"
call "org.apache.commons.csv.CSVPrinter.printRecord(Object[])" "org.apache.commons.csv.CSVFormat.printRecord(Appendable,Object[])"
reference "org.apache.commons.csv.CSVPrinter.printRecord(Object[])" "org.apache.commons.csv.CSVPrinter.newRecord : boolean"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.printRecord(Object[])"
call "org.apache.commons.csv.CSVPrinter.printRecords(Iterable)" "org.apache.commons.csv.CSVPrinter.printRecord(Object[])"
call "org.apache.commons.csv.CSVPrinter.printRecords(Iterable)" "org.apache.commons.csv.CSVPrinter.printRecord(Iterable)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.printRecords(Iterable)"
call "org.apache.commons.csv.CSVPrinter.printRecords(Object[])" "org.apache.commons.csv.CSVPrinter.printRecord(Object[])"
call "org.apache.commons.csv.CSVPrinter.printRecords(Object[])" "org.apache.commons.csv.CSVPrinter.printRecord(Iterable)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.printRecords(Object[])"
call "org.apache.commons.csv.CSVPrinter.printRecords(ResultSet)" "org.apache.commons.csv.CSVPrinter.print(Object)"
call "org.apache.commons.csv.CSVPrinter.printRecords(ResultSet)" "org.apache.commons.csv.CSVPrinter.println()"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.printRecords(ResultSet)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.out : Appendable"
reference "org.apache.commons.csv.CSVPrinter.format : CSVFormat" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.format : CSVFormat"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.newRecord : boolean"
